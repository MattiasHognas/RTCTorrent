var __extends=this.__extends||function(n,t){function i(){this.constructor=n}i.prototype=t.prototype,n.prototype=new i},RtcTorrent;(function(n){"use strict";var t=function(t){function i(){t.call(this),this.configuration=null,this.socket=null,this.sessionReady=ko.observable(!1),this.torrents=ko.observableArray([]),this.configuration=new n.Configuration,this.init()}return __extends(i,t),i.prototype.dropTorrent=function(t){var i=new n.FileContent;i.read(t,function(n){this.loadTorrent(n)})},i.prototype.loadTorrent=function(t){if(console.log("Loading torrent"),this.sessionReady){var i=new n.Torrent(t,this);this.torrents.push(i),this.socket.server.joinRoom({SessionId:this.id(),RoomId:i.id()})}},i.prototype.removeTorrent=function(n){console.log("Removing torrent");var t=this.findTorrent(n);t&&(this.socket.server.leaveRoom({SessionId:this.id(),RoomId:t.id()}),this.torrents.remove(t))},i.prototype.init=function(){if(this.configuration.webRTCSupport){var n=this;this.socket=$.connection.roomHub,$.connection.hub.logging=!1,$.connection.hub.start({transport:"auto"}).done(function(){console.log("Connection done",$.connection.hub.id),n.id($.connection.hub.id),n.sessionReady(!0)}).fail(function(n){var t="Unable to connect to SignalR Hubs: "+n;console.log(t)}),this.socket.client.onJsepOffer=function(t){console.log("got JSEP offer",t);var i=n.findOrCreatePeer(t.FromSessionId,t.RoomId);i.onJsepOffer(t)},this.socket.client.onJsepAnswer=function(t){console.log("got JSEP answer",t);var i=n.findOrCreatePeer(t.FromSessionId,t.RoomId);i.onJsepAnswer(t)},this.socket.client.onJsepCandidate=function(t){console.log("got JSEP candidate",t);var i=n.findOrCreatePeer(t.FromSessionId,t.RoomId);i.onJsepCandidate(t)},this.socket.client.onJoinedRoom=function(t){console.log("another user joined",t);var i=n.findOrCreatePeer(t.SessionId,t.RoomId);i.start()},this.socket.client.onLeftRoom=function(t){console.log("another user left",t),n.removePeer(t.SessionId,t.RoomId)}}else console.error("Your browser doesn't seem to support WebRTC")},i.prototype.findOrCreatePeer=function(n,t){var i=this.findTorrent(t),r;return i?(r=i.findPeer(n),r||i.createPeer(n),r):null},i.prototype.removePeer=function(n,t){var i=ko.utils.arrayFirst(this.torrents(),function(n){return t===n.id()}),r;i&&(r=i.findPeer(n),r&&i.peers.remove(r))},i.prototype.findTorrent=function(n){return ko.utils.arrayFirst(this.torrents(),function(t){return n===t.id()})},i}(n.User);n.Client=t})(RtcTorrent||(RtcTorrent={}))