var __extends=this.__extends||function(n,t){function i(){this.constructor=n}i.prototype=t.prototype,n.prototype=new i},RtcTorrent;(function(n){"use strict";var t=function(t){function i(){if(t.call(this),this.configuration=null,this.socket=null,this.sessionReady=ko.observable(!1),this.torrents=ko.observableArray([]),this.trackerFiles=ko.observableArray([]),this.configuration=new n.Configuration,this.loadTorrent=function(t){if(console.log("Loading torrent",t),i.sessionReady()){var r=new n.Torrent(i,t);i.torrents.push(r),i.socket.server.joinTorrent({SessionId:i.id(),TorrentId:r.trackerTorrent.id()})}},this.removeTorrent=function(n){console.log("Removing torrent",n);var t=i.findTorrent(n.id);t&&(i.socket.server.leaveTorrent({SessionId:i.id(),TorrentId:t.trackerTorrent.id()}),i.torrents.remove(t))},this.configuration.webRTCSupport){var i=this;this.socket=$.connection.torrentHub,$.connection.hub.logging=!1,$.connection.hub.start({transport:"auto"}).done(function(){console.log("Connection done",$.connection.hub.id),i.id($.connection.hub.id),i.sessionReady(!0)}).fail(function(n){var t="Unable to connect to SignalR Hubs: "+n;console.log(t)}),this.socket.client.onJsepOffer=function(n){console.log("got JSEP offer",n);var t=i.findOrCreatePeer(n.FromSessionId,n.TorrentId);t.onJsepOffer(n)},this.socket.client.onJsepAnswer=function(n){console.log("got JSEP answer",n);var t=i.findOrCreatePeer(n.FromSessionId,n.TorrentId);t.onJsepAnswer(n)},this.socket.client.onJsepCandidate=function(n){console.log("got JSEP candidate",n);var t=i.findOrCreatePeer(n.FromSessionId,n.TorrentId);t.onJsepCandidate(n)},this.socket.client.onJoinedTorrent=function(n){console.log("another user joined",n);var t=i.findOrCreatePeer(n.SessionId,n.TorrentId);t.start()},this.socket.client.onLeftTorrent=function(n){console.log("another user left",n),i.removePeer(n.SessionId,n.TorrentId)}}else console.error("Your browser doesn't seem to support WebRTC")}return __extends(i,t),i.prototype.findOrCreatePeer=function(n,t){var i=this.findTorrent(t),r;return i?(r=i.findPeer(n),r||i.createPeer(n),r):null},i.prototype.removePeer=function(n,t){var i=ko.utils.arrayFirst(this.torrents(),function(n){return t===n.trackerTorrent.id()}),r;i&&(r=i.findPeer(n),r&&i.peers.remove(r))},i.prototype.findTorrent=function(n){return ko.utils.arrayFirst(this.torrents(),function(t){return n===t.trackerTorrent.id()})},i}(n.User);n.Client=t})(RtcTorrent||(RtcTorrent={}))